
server.port=1161
server.servlet-path=/

spring.application.name=zuul-gateway
eureka.client.serviceUrl.defaultZone=http://s1:1111/eureka/

#exapmle:  http://localhost:1161/api-a/hello-normal-get
zuul.routes.api-a.path=/api-a/**
zuul.routes.api-a.url=http://localhost:1131/
zuul.routes.api-a.customSensitiveHeaders=true

#将请求原始HOST一并转发
#zuul.addHostHeader=true

#B版本中无效
#zuul.routes.api-a.path=/api-a/**
#zuul.routes.api-a.serviceId=consumer-server-feign

#禁用某个过滤器
#zuul.AccessFilterPre.pre.disable=true

#启用重试
zuul.retryable=true
zuul.routes.api-a.retryable=true


#Camden SR2 开始启用，之前需要手动扩展		Ribbon config
spring.cloud.loadbalancer.retry.enabled=true
#请求连接的超时时间
ribbon.ConnectTimeOut=250
#请求处理的超时时间
ribbon.ReadTimeOut=1000
#对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
#切换实例的重试次数
ribbon.MaxAutoRetriesNextServer=2
#对当前实例的重试次数
ribbon.MaxAutoRetries=1



#org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean	服务实例类配置
#false	是否优先使用IP地址作为主机名的标识
eureka.instance.perferIpAddress=false
#30s	Eureka客户端向服务端发送心跳时间间隔 
eureka.instance.leaseRenewalIntervalInSeconds=30
#90s	Eureka服务端在收到最后一次心跳之后等待的时间上限。超过该上限时间后服务端会将该服务实例从服务清单中剔除，从而禁止服务调用请求被发送到该实例上
eureka.instance.leaseExpirationDurationInSeconds=90
#80		非安全的通信端口号
eureka.instance.nonSecurePort=80
#443	安全的通信端口号
eureka.instance.securePort=443
#true	是否启用非安全的通信端口号
eureka.instance.nonSecurePortEnabled=true
#false	是否启用安全的通信端口号
eureka.instance.securePortEnabled=false



#fallback	配置CommandKey.getFallBack()时的配置			hystrix
#服务降级策略是否启动
hystrix.command.default.fallback.enabled=true
#执行getFallBack()的最大并发请求数
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=10

#circuitBreaker	配置			hystrix
#当请求命令失败时是否使用断路器来跟踪其健康指标和熔断请求
hystrix.command.default.circuitBreaker.enabled=true
#强制打开断路器
hystrix.command.default.circuitBreaker.forceOpen=false
#强制关闭断路器
hystrix.command.default.circuitBreaker.forceClosed=false
#滚动时间窗中断路器熔断的最小请求数，滚动时间窗默认10s，默认为20，即便有19个请求失败，还是不会熔断
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#断路器打开后的休眠时间窗，休眠结束后，断路器会再去尝试连接被断路的服务，连接成功关闭断路器，连接失败打开断路器
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
#断路器打开的错误百分比条件，在请求数量超过requestVolumeThreshold的前提下，错误百分比超过50%则打开断路器
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50